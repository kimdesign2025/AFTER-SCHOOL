# Generated by Django 5.2.3 on 2025-06-25 04:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('course', '0007_teacherapplication_identity_card_picture_and_more'),
        ('users', '0004_remove_teacher_bio_teacher_profile_image_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PrivateCourse',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the record was created.', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated.', verbose_name='Updated at')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is marked as deleted.', verbose_name='Is deleted')),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for the model instance.', primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user who created the record.', null=True, verbose_name='IP address')),
                ('author', models.EmailField(blank=True, help_text='Email of the user who created the record.', max_length=254, null=True, verbose_name='Author')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata stored as JSON.', null=True, verbose_name='Metadata')),
                ('scheduled_time', models.DateTimeField(help_text='Date and time when the private course is scheduled.', verbose_name='Scheduled Time')),
                ('meet_link', models.URLField(help_text='Link to the Google Meet for the private course.', verbose_name='Google Meet Link')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Status of the private course.', max_length=20, verbose_name='Status')),
                ('price', models.DecimalField(decimal_places=2, default=50.0, help_text='Price of the private course.', max_digits=10, verbose_name='Price')),
                ('student', models.ForeignKey(help_text='Student booked for the private course.', on_delete=django.db.models.deletion.CASCADE, related_name='private_courses_as_student', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
                ('teacher', models.ForeignKey(help_text='Teacher conducting the private course.', on_delete=django.db.models.deletion.CASCADE, related_name='private_courses_as_teacher', to='users.teacher', verbose_name='Teacher')),
            ],
            options={
                'verbose_name': 'Private Course',
                'verbose_name_plural': 'Private Courses',
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSimulation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when the record was created.', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated.', verbose_name='Updated at')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates whether the record is marked as deleted.', verbose_name='Is deleted')),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for the model instance.', primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user who created the record.', null=True, verbose_name='IP address')),
                ('author', models.EmailField(blank=True, help_text='Email of the user who created the record.', max_length=254, null=True, verbose_name='Author')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata stored as JSON.', null=True, verbose_name='Metadata')),
                ('method', models.CharField(choices=[('mtn', 'MTN Mobile Money'), ('orange', 'Orange Money')], help_text='Simulated payment method used.', max_length=20, verbose_name='Payment Method')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount paid for the private course.', max_digits=10, verbose_name='Amount')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Status of the simulated payment.', max_length=20, verbose_name='Status')),
                ('private_course', models.OneToOneField(help_text='Private course associated with the payment.', on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='course.privatecourse', verbose_name='Private Course')),
            ],
            options={
                'verbose_name': 'Payment Simulation',
                'verbose_name_plural': 'Payment Simulations',
                'ordering': ['-created_at'],
            },
        ),
    ]
